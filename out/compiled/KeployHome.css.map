{
  "version": 3,
  "file": "KeployHome.css",
  "sources": [
    "KeployHome.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { fly } from 'svelte/transition';\n  import { onMount } from 'svelte';\n  import lottie from 'lottie-web';\n\n  const intro = 60; // final frame of the intro sequence\n  const stopFrame = 180; // final frame of the stop icon appearing\n  const recFrame = 240; // final frame of the record frame appearing (last frame which matches the intro frame to ensure it loops)\n\n  // let animationWindow;\n  // let anim;\n\n  // onMount(() => {\n  //   anim = lottie.loadAnimation({\n  //     container: animationWindow,\n  //     renderer: 'svg',\n  //     loop: false,\n  //     autoplay: true,\n  //     // we play the intro immediately\n  //     initialSegment: [0, intro],\n  //     path: 'https://assets.codepen.io/35984/record_button.json'\n  //   });\n\n  //   anim.setSpeed(1.61);\n\n  //   const onClick = (e) => {\n  //     if (anim.currentFrame > intro && anim.currentFrame <= stopFrame - intro - 1) {\n  //       console.log('playing from stop to record');\n  //       anim.playSegments([stopFrame, recFrame], true);\n  //     } else {\n  //       console.log('playing to stop icon');\n  //       anim.playSegments([intro, stopFrame], true);\n  //     }\n  //   };\n\n  //   // animationWindow.addEventListener('click', onClick);\n\n  //   return () => {\n  //     animationWindow.removeEventListener('click', onClick);\n  //     anim.destroy();\n  //   };\n  // });\n\n  let startRecordingButton;\n  let startTestingButton;\n  let stopRecordingButton;\n  let stopTestingButton;\n  let isRecording = false;\n  let isTesting = false;\n  let showSteps = false;\n  let selectedIconButton = 1;\n  let settingsIcon = document.querySelector('.settings-icon');\n\n  const selectButton = (buttonNumber) => {\n        console.log('buttonNumber', buttonNumber);\n        selectedIconButton = buttonNumber;\n        if (buttonNumber !== 2) {\n            clearLastTestResults();\n        }\n        if (buttonNumber!==1) {\n            console.log(\"setting display none\")\n            startRecordingButton.style.display = 'none';\n            startTestingButton.style.display = 'none';\n        }\n        if(buttonNumber===1){\n            startRecordingButton.style.display = 'flex';\n            startTestingButton.style.display = 'flex';\n          }\n          if(buttonNumber===3){\n            settingsIcon.classList.toggle('open'); // Update icon based on dropdown state\n\n          }\n          \n    };\n    const clearLastTestResults = () => {\n        const testSuiteName = document.getElementById('testSuiteName');\n        const totalTestCases = document.getElementById('totalTestCases');\n        const testCasesPassed = document.getElementById('testCasesPassed');\n        const testCasesFailed = document.getElementById('testCasesFailed');\n        const errorElement = document.getElementById('errorElement');\n        if (testSuiteName) testSuiteName.textContent = '';\n        if (totalTestCases) totalTestCases.textContent = '';\n        if (testCasesPassed) testCasesPassed.textContent = '';\n        if (testCasesFailed) testCasesFailed.textContent = '';\n        if (errorElement) errorElement.style.display = 'none';\n\n\n    };\n    const triggerAnimation = () => {\n    if (anim.currentFrame > intro && anim.currentFrame <= stopFrame - intro - 1) {\n      console.log('playing from stop to record');\n      anim.playSegments([stopFrame, recFrame], true);\n    } else {\n      console.log('playing to stop icon');\n      anim.playSegments([intro, stopFrame], true);\n    }\n  };\n\n  const toggleRecording = () => {\n    isRecording = !isRecording;\n    isTesting = false;\n    showSteps = !showSteps;\n    triggerAnimation();\n  };\n\n  const toggleTesting = () => {\n    isTesting = !isTesting;\n    isRecording = false;\n    showSteps = !showSteps;\n    triggerAnimation();\n  };\n\n  const stop = () => {\n    isRecording = false;\n    isTesting = false;\n    showSteps = false;\n    triggerAnimation();\n  };\n\n\n  $: {\n    if (startRecordingButton) {\n      startRecordingButton.style.display = isRecording || isTesting || selectedIconButton!==1 ? 'none' : 'flex';\n    }\n    if (startTestingButton) {\n      startTestingButton.style.display = isRecording || isTesting || selectedIconButton!==1 ? 'none' : 'flex';\n    }\n    // if (stopRecordingButton) {\n    //   stopRecordingButton.style.display = isRecording ? 'inline' : 'none';\n    // }\n    // if (stopTestingButton) {\n    //   stopTestingButton.style.display = isTesting ? 'inline' : 'none';\n    // }\n    const loader = document.getElementById('loader');\n        if (loader) {\n            loader.style.display = isRecording || isTesting ? 'block' : 'none';\n        }\n        const stopRecordingButton = document.getElementById('stopRecordingButton');\n        if (stopRecordingButton) {\n            stopRecordingButton.style.display = isRecording ? 'inline' : 'none';\n        }\n        const stopTestingButton = document.getElementById('stopTestingButton');\n        if (stopTestingButton) {\n            stopTestingButton.style.display = isTesting ? 'inline' : 'none';\n        }\n        const statusdiv = document.getElementById('statusdiv');\n        if (statusdiv) {\n            statusdiv.style.display = selectedIconButton===1?  'block' : \"none\";\n        }\n  }\n\n  const recordingSteps = [\n    \"Step 1: Make sure the database is running\",\n    \"Step 2: The command is present in Config\",\n    \"Step 3: Make API Calls\",\n    \"Step 4: Save Recording\"\n  ];\n\n  const replayingSteps = [\n    \"Step 1: Initialize Replay\",\n    \"Step 2: Running Test Cases\",\n    \"Step 3: Execute Replay\",\n    \"Step 4: Verify Test Results\"\n  ];\n</script>\n\n<style>\n  .container {\n    padding: 16px;\n    font-family: 'Arial', sans-serif;\n  }\n\n  .header {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 10px;\n    margin-top: 28px;\n    flex-direction: column;\n  }\n  .icon-buttons {\n        display: flex;\n        justify-content: space-around;\n        border : 2px solid ;\n        border-color: var(--vscode-button-secondaryBackground);\n        border-radius: 5px;\n        padding: 5px;\n    }\n    .icon-button {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: var(--vscode-button-background);\n      border-radius: 5px;\n      /* border: 2px solid transparent; */\n      color: #FF914D;\n      font-size: 24px;\n      height: 40px;\n      width: 80svw;\n      cursor: pointer;\n    }\n    .icon-button.selected {\n      /* border-color: #ff9933; */\n      /* background-color: var(--vscode-button-background); */\n      background-color: var(--vscode-button-secondaryBackground)\n    }\n    .icon-button:hover {\n      color: #ff9933;\n      background-color: #606060;\n\n      /* background-color: #f9f9f9; */\n    }\n  .heading {\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    text-align: center;\n  }\n\n  .header h1 {\n    font-size: 24px;\n    margin: 0;\n  }\n\n  .section {\n    margin-bottom: 32px;\n  }\n\n  #testResults{\n        margin: 20px auto;\n        text-align: left;\n        display: grid;\n        place-items: center;\n        grid-template-columns: 1fr;\n    }\n    #testStatus{\n        text-align: center;\n        display: none;\n    }\n    #viewCompleteSummaryButton{\n        display: none;\n        width: 75%;\n        margin: 10px auto;\n    }\n  #recordStatus {\n        display: none;\n        text-align: center;\n        margin: 20px;\n        font-weight: bold;\n    }\n    #recordedTestCases {\n        display: grid;\n        grid-template-columns: 1fr;\n        place-items: center;\n    }\n    .statusdiv{\n        display: grid;\n        grid-template-columns: 1fr;\n        place-items: center;\n    }\n    #testResults{\n      text-align: left;\n    }\n\n  .card {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 16px;\n    margin-bottom: 16px;\n    background-color: var(--vscode-button-background);\n    color: #ff9933;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    transition: background-color 0.3s;\n    cursor: pointer;\n  }\n\n\n  .card-icon {\n    display: flex;\n    align-items: center;\n    font-size: 24px;\n    height: 35px;\n    width: 35px;\n\n    margin-right: 16px;\n    color: #ff6f61;\n  }\n\n  .card-text {\n    flex-grow: 1;\n    font-size: 16px;\n    color: white;\n  }\n\n  .card-arrow {\n    font-size: 18px;\n    color: white;\n  }\n\n  .steps {\n    margin-top: 16px;\n    padding: 16px;\n    /* background-color: #e9e9e9; */\n    color: #b0b0b0;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  }\n\n  .step {\n    margin-bottom: 8px;\n  }\n\n  .stop-button {\n    display: inline;\n    cursor: pointer;\n    color: red;\n    font-size: 24px;\n    margin-left: 16px;\n  }\n  .loader {\n        display: none;\n    }\n    /* #animationWindow {\n    width: 400px;\n    height: 400px;\n  } */\n\n  .icon-button {\n    cursor: pointer;\n  }\n  .tooltip{\n    display: none;\n    position: absolute;\n    background-color: var(--vscode-button-background);\n    color: white;\n    text-align: center;\n    border-radius: 6px;\n    padding: 5px;\n    width: 120px;\n    z-index: 1;\n    font-size: x-small;\n    top : 80px;\n\n  }\n  .icon-button:hover .tooltip{\n    display: block;\n  }\n  #completeSummaryHr{\n    display: none;\n  }\n</style>\n\n<div class=\"container\">\n  <div class=\"icon-buttons\">\n    <button id=\"keploycommands\" class=\"icon-button {selectedIconButton === 1 ? 'selected' : ''}\" on:click={() => selectButton(1)}>\n      <span class=\"tooltip\">Record/Replay</span>\n        {#if isRecording}\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"35px\" height=\"35px\" viewBox=\"0 0 24 24\"><path fill=\"#FF914D\" d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10s10-4.48 10-10S17.52 2 12 2m0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8s8 3.58 8 8s-3.58 8-8 8m4-4H8V8h8z\"/></svg>\n        {:else}\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"35px\" height=\"35px\" viewBox=\"0 0 24 24\"><path fill=\"#FF914D\" d=\"M12 18c3.31 0 6-2.69 6-6s-2.69-6-6-6s-6 2.69-6 6s2.69 6 6 6\" opacity=\"0.3\"/><path fill=\"#FF914D\" d=\"M12 20c4.42 0 8-3.58 8-8s-3.58-8-8-8s-8 3.58-8 8s3.58 8 8 8m0-14c3.31 0 6 2.69 6 6s-2.69 6-6 6s-6-2.69-6-6s2.69-6 6-6\"/></svg>\n        {/if}\n        <!-- <div bind:this={animationWindow} id=\"animationWindow\"></div> -->\n    </button>\n    <button id=\"displayPreviousTestResults\" class=\"icon-button {selectedIconButton === 2 ? 'selected' : ''}\" on:click={() => selectButton(2)}>\n      <span class=\"history-icon\"></span>\n      <span class=\"tooltip\">History</span>\n    </button>\n    <button id=\"openConfig\" class=\"icon-button {selectedIconButton === 3 ? 'selected' : ''}\" on:click={() => selectButton(3)}>\n      <span class=\"settings-icon\"></span> \n      <span class=\"tooltip\">Settings</span>\n    </button>\n</div>\n  <div class=\"header\">\n    <div class=\"heading\">\n      {#if selectedIconButton === 3}\n        <h1>Make changes to keploy config !!</h1>\n      {:else if selectedIconButton === 2}\n        <h1>View Previous Test Results</h1>\n      {:else}\n        <h1>{isRecording ? \"Recording Started\" : isTesting ? \"Testing Started\" : \"Running Keploy !!\"}</h1>\n      {/if}\n      <span class=\"stop-button\" on:click={stop} on:keydown={e => e.key === 'Enter' && stop()} id=\"stopRecordingButton\" bind:this={stopRecordingButton} role=\"button\" tabindex=\"0\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"35px\" height=\"35px\" viewBox=\"0 0 24 24\"><path fill=\"#FF914D\" d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10s10-4.48 10-10S17.52 2 12 2m0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8s8 3.58 8 8s-3.58 8-8 8m4-4H8V8h8z\"/></svg>\n\n      </span>\n      <span class=\"stop-button\" on:click={stop} on:keydown={e => e.key === 'Enter' && stop()} id=\"stopTestingButton\" bind:this={stopTestingButton} role=\"button\" tabindex=\"0\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"35px\" height=\"35px\" viewBox=\"0 0 24 24\"><path fill=\"#FF914D\" d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10s10-4.48 10-10S17.52 2 12 2m0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8s8 3.58 8 8s-3.58 8-8 8m4-4H8V8h8z\"/></svg>\n      </span>\n    </div>    \n      <div class=\"statusdiv\" id=\"statusdiv\">\n        <h3 id=\"recordStatus\"> </h3>\n        <div id=\"recordedTestCases\"></div>\n        <h3 id=\"testStatus\"> </h3>\n        <div id=\"testResults\"></div>\n        <button id=\"viewCompleteSummaryButton\">View Complete Test Summary\n          \n        </button>  \n        <hr id=\"completeSummaryHr\" />\n      </div>\n  </div>\n  {#if selectedIconButton === 2}\n        <div id=\"lastTestResults\">\n            <h3 id=\"testSuiteName\"> </h3>\n        </div>\n        {/if}\n\n  <div class=\"section\">\n    <div class=\"card\" on:click={toggleRecording} on:keydown={e => e.key === 'Enter' && toggleRecording()} tabindex=\"0\" role=\"button\" id=\"startRecordingButton\" bind:this={startRecordingButton}>\n      <div class=\"card-icon\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"35px\" height=\"35px\" viewBox=\"0 0 24 24\"><path fill=\"#FF914D\" d=\"M12 18c3.31 0 6-2.69 6-6s-2.69-6-6-6s-6 2.69-6 6s2.69 6 6 6\" opacity=\"0.3\"/><path fill=\"#FF914D\" d=\"M12 20c4.42 0 8-3.58 8-8s-3.58-8-8-8s-8 3.58-8 8s3.58 8 8 8m0-14c3.31 0 6 2.69 6 6s-2.69 6-6 6s-6-2.69-6-6s2.69-6 6-6\"/></svg>\n      </div>\n      <div class=\"card-text\">Record Test Cases</div>\n      <div class=\"card-arrow\">➔</div>\n    </div>\n    <div class=\"card\" on:click={toggleTesting} on:keydown={e => e.key === 'Enter' && toggleTesting()} tabindex=\"0\" role=\"button\" id=\"startTestingButton\" bind:this={startTestingButton}>\n      <div class=\"card-icon replay-icon\"></div>\n      <div class=\"card-text\">Replay Test Cases</div>\n      <div class=\"card-arrow\">➔</div>\n    </div>\n  </div>\n\n  {#if showSteps}\n    <div class=\"steps\" transition:fly={{ y: 20, duration: 300 }}>\n      {#if isRecording}\n        {#each recordingSteps as step}\n          <div class=\"step\">{step}</div>\n        {/each}\n      {:else if isTesting}\n        {#each replayingSteps as step}\n          <div class=\"step\">{step}</div>\n        {/each}\n      {/if}\n    </div>\n  {/if}\n  <div class=\"loader\" id=\"loader\"></div>\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}