{
  "version": 3,
  "file": "KeployHome.css",
  "sources": [
    "KeployHome.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import { fly } from 'svelte/transition';\r\n  import '../app.css';\r\n  // import { onMount } from 'svelte';\r\n  // import lottie from 'lottie-web';\r\n\r\n  // const intro = 60; // final frame of the intro sequence\r\n  // const stopFrame = 180; // final frame of the stop icon appearing\r\n  // const recFrame = 240; // final frame of the record frame appearing (last frame which matches the intro frame to ensure it loops)\r\n\r\n  // let animationWindow;\r\n  // let anim;\r\n\r\n  // onMount(() => {\r\n  //   anim = lottie.loadAnimation({\r\n  //     container: animationWindow,\r\n  //     renderer: 'svg',\r\n  //     loop: false,\r\n  //     autoplay: true,\r\n  //     // we play the intro immediately\r\n  //     initialSegment: [0, intro],\r\n  //     path: 'https://assets.codepen.io/35984/record_button.json'\r\n  //   });\r\n\r\n  //   anim.setSpeed(1.61);\r\n\r\n  //   const onClick = (e) => {\r\n  //     if (anim.currentFrame > intro && anim.currentFrame <= stopFrame - intro - 1) {\r\n  //       console.log('playing from stop to record');\r\n  //       anim.playSegments([stopFrame, recFrame], true);\r\n  //     } else {\r\n  //       console.log('playing to stop icon');\r\n  //       anim.playSegments([intro, stopFrame], true);\r\n  //     }\r\n  //   };\r\n\r\n  //   // animationWindow.addEventListener('click', onClick);\r\n\r\n  //   return () => {\r\n  //     animationWindow.removeEventListener('click', onClick);\r\n  //     anim.destroy();\r\n  //   };\r\n  // });\r\n\r\n  let startRecordingButton;\r\n  let startTestingButton;\r\n  let buttonsSection = document.getElementById('buttonsSection');\r\n  let stopRecordingButton;\r\n  let stopTestingButton;\r\n  let isRecording = false;\r\n  let isTesting = false;\r\n  let showSteps = false;\r\n  let selectedIconButton = 1;\r\n  let settingsIcon = document.querySelector('.settings-icon');\r\n\r\n  const selectButton = (buttonNumber) => {\r\n        console.log('buttonNumber', buttonNumber);\r\n        selectedIconButton = buttonNumber;\r\n        if (buttonNumber !== 2) {\r\n            clearLastTestResults();\r\n        }\r\n        if (buttonNumber!==1) {\r\n            console.log(\"setting display none\")\r\n            startRecordingButton.style.display = 'none';\r\n            startTestingButton.style.display = 'none';\r\n        }\r\n        if(buttonNumber===1){\r\n            startRecordingButton.style.display = 'flex';\r\n            startTestingButton.style.display = 'flex';\r\n          }\r\n          if(buttonNumber===3){\r\n            settingsIcon.classList.toggle('open'); // Update icon based on dropdown state\r\n\r\n          }\r\n          \r\n    };\r\n    const clearLastTestResults = () => {\r\n        const testSuiteName = document.getElementById('testSuiteName');\r\n        const totalTestCases = document.getElementById('totalTestCases');\r\n        const testCasesPassed = document.getElementById('testCasesPassed');\r\n        const testCasesFailed = document.getElementById('testCasesFailed');\r\n        const errorElement = document.getElementById('errorElement');\r\n        if (testSuiteName) testSuiteName.textContent = '';\r\n        if (totalTestCases) totalTestCases.textContent = '';\r\n        if (testCasesPassed) testCasesPassed.textContent = '';\r\n        if (testCasesFailed) testCasesFailed.textContent = '';\r\n        if (errorElement) errorElement.style.display = 'none';\r\n\r\n\r\n    };\r\n  //   const triggerAnimation = () => {\r\n  //   if (anim.currentFrame > intro && anim.currentFrame <= stopFrame - intro - 1) {\r\n  //     console.log('playing from stop to record');\r\n  //     anim.playSegments([stopFrame, recFrame], true);\r\n  //   } else {\r\n  //     console.log('playing to stop icon');\r\n  //     anim.playSegments([intro, stopFrame], true);\r\n  //   }\r\n  // };\r\n\r\n  const toggleRecording = () => {\r\n    isRecording = !isRecording;\r\n    isTesting = false;\r\n    showSteps = !showSteps;\r\n    // triggerAnimation();\r\n  };\r\n\r\n  const toggleTesting = () => {\r\n    isTesting = !isTesting;\r\n    isRecording = false;\r\n    showSteps = !showSteps;\r\n    // triggerAnimation();\r\n  };\r\n\r\n  const stop = () => {\r\n    isRecording = false;\r\n    isTesting = false;\r\n    showSteps = false;\r\n    // triggerAnimation();\r\n  };\r\n\r\n\r\n  $: {\r\n    if (startRecordingButton) {\r\n      startRecordingButton.style.display = isRecording || isTesting || selectedIconButton!==1 ? 'none' : 'flex';\r\n    }\r\n    if (startTestingButton) {\r\n      startTestingButton.style.display = isRecording || isTesting || selectedIconButton!==1 ? 'none' : 'flex';\r\n    }\r\n    if (buttonsSection) {\r\n      buttonsSection.style.display = isRecording || isTesting || selectedIconButton!==1 ? 'none' : 'flex';\r\n    }\r\n    // if (stopRecordingButton) {\r\n    //   stopRecordingButton.style.display = isRecording ? 'inline' : 'none';\r\n    // }\r\n    // if (stopTestingButton) {\r\n    //   stopTestingButton.style.display = isTesting ? 'inline' : 'none';\r\n    // }\r\n    const loader = document.getElementById('loader');\r\n        if (loader) {\r\n            loader.style.display = isRecording || isTesting ? 'block' : 'none';\r\n        }\r\n        const stopRecordingButton = document.getElementById('stopRecordingButton');\r\n        if (stopRecordingButton) {\r\n            stopRecordingButton.style.display = isRecording ? 'inline' : 'none';\r\n        }\r\n        const stopTestingButton = document.getElementById('stopTestingButton');\r\n        if (stopTestingButton) {\r\n            stopTestingButton.style.display = isTesting ? 'inline' : 'none';\r\n        }\r\n        const statusdiv = document.getElementById('statusdiv');\r\n        if (statusdiv) {\r\n            statusdiv.style.display = selectedIconButton===1?  'block' : \"none\";\r\n        }\r\n        const viewTestLogs = document.getElementById('viewTestLogsButton');\r\n        const viewRecordLogs = document.getElementById('viewRecordLogsButton');\r\n  }\r\n\r\n  const recordingSteps = [\r\n    \"Step 1: Make sure the database is running\",\r\n    \"Step 2: The command is present in Config\",\r\n    \"Step 3: Make API Calls\",\r\n    \"Step 4: Save Recording\"\r\n  ];\r\n\r\n  const replayingSteps = [\r\n    \"Step 1: Initialize Replay\",\r\n    \"Step 2: Running Test Cases\",\r\n    \"Step 3: Execute Replay\",\r\n    \"Step 4: Verify Test Results\"\r\n  ];\r\n</script>\r\n\r\n<style>\r\n\r\n\r\n\r\n\r\n  .container {\r\n    padding: 16px;\r\n    \r\n    /* font-family: 'Arial', sans-serif; */\r\n  }\r\n\r\n  .header {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n    margin-top: 28px;\r\n    flex-direction: column;\r\n  }\r\n  .icon-buttons {\r\n        display: flex;\r\n        justify-content: space-around;\r\n        border : 2px solid ;\r\n        border-color: var(--vscode-button-secondaryBackground);\r\n        border-radius: 5px;\r\n        padding: 5px;\r\n    }\r\n    .icon-button {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      /* background-color: var(--vscode-button-background); */\r\n      background-color: var(--vscode-button-secondaryBackground);\r\n      border-radius: 5px;\r\n      /* border: 2px solid transparent; */\r\n      color: #FF914D;\r\n      font-size: 24px;\r\n      height: 40px;\r\n      width: 80svw;\r\n      cursor: pointer;\r\n    }\r\n    .icon-button.selected {\r\n      /* border-color: #ff9933; */\r\n      /* background-color: var(--vscode-button-background); */\r\n      background-color: #00163D;\r\n\r\n    }\r\n    .icon-button:hover {\r\n      color: #ff9933;\r\n      background-color: #606060;\r\n\r\n      /* background-color: #f9f9f9; */\r\n    }\r\n  .heading {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    text-align: center;\r\n  }\r\n\r\n  .header h1 {\r\n    font-size: 24px;\r\n    margin: 0;\r\n  }\r\n\r\n  .section {\r\n    margin-bottom: 32px;\r\n  }\r\n\r\n  #testResults{\r\n        margin: 20px auto;\r\n        text-align: left;\r\n        display: grid;\r\n        place-items: center;\r\n        grid-template-columns: 1fr;\r\n    }\r\n    #testStatus{\r\n        text-align: center;\r\n        display: none;\r\n    }\r\n    #viewCompleteSummaryButton , #viewTestLogsButton , #viewRecordLogsButton{\r\n        display: none;\r\n        width: 100%;\r\n        margin: 10px auto;\r\n    }\r\n  #recordStatus {\r\n        display: none;\r\n        text-align: center;\r\n        margin: 20px;\r\n        font-weight: bold;\r\n    }\r\n    #recordedTestCases {\r\n        display: none;\r\n        grid-template-columns: 1fr;\r\n        place-items: center;\r\n    }\r\n    .statusdiv{\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        place-items: center;\r\n    }\r\n    #testResults{\r\n      text-align: left;\r\n    }\r\n\r\n  .card {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 16px;\r\n    margin-bottom: 16px;\r\n    /* background-color: var(--vscode-button-background); */\r\n    background-color: #00163D;\r\n    color: #ff9933;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n    transition: background-color 0.3s;\r\n    cursor: pointer;\r\n  }\r\n\r\n\r\n  .card-icon {\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 24px;\r\n    height: 35px;\r\n    width: 35px;\r\n\r\n    margin-right: 16px;\r\n    color: #ff6f61;\r\n  }\r\n\r\n  .card-text {\r\n    flex-grow: 1;\r\n    font-size: 20px;\r\n    color: white;\r\n  }\r\n\r\n  .card-arrow {\r\n    font-size: 20px;\r\n    color: white;\r\n  }\r\n\r\n  .steps {\r\n    margin-top: 16px;\r\n    padding: 16px;\r\n    /* background-color: #e9e9e9; */\r\n    /* color: #b0b0b0; */\r\n    font-size: 16px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  .step {\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  .stop-button {\r\n    display: inline;\r\n    cursor: pointer;\r\n    color: red;\r\n    font-size: 24px;\r\n    margin-left: 16px;\r\n  }\r\n  .loader {\r\n        display: none;\r\n    }\r\n    /* #animationWindow {\r\n    width: 400px;\r\n    height: 400px;\r\n  } */\r\n\r\n  .icon-button {\r\n    cursor: pointer;\r\n  }\r\n  .tooltip{\r\n    display: none;\r\n    position: absolute;\r\n    /* background-color: var(--vscode-button-background); */\r\n    background-color: #00163D;\r\n    color: white;\r\n    text-align: center;\r\n    border-radius: 6px;\r\n    padding: 5px;\r\n    width: 120px;\r\n    z-index: 1;\r\n    font-size: x-small;\r\n    top : 80px;\r\n\r\n  }\r\n  .icon-button:hover .tooltip{\r\n    display: block;\r\n  }\r\n  #completeSummaryHr{\r\n    display: none;\r\n  }</style>\r\n\r\n\r\n\r\n<div class=\"p-4 font-sans\">\r\n  <div class=\"flex justify-center space-x-2 border-2 border-[var(--vscode-button-secondaryBackground)] rounded-md p-1 mb-6\">\r\n    <button \r\n      id=\"keploycommands\" \r\n      class=\"flex justify-center items-center bg-[var(--vscode-button-secondaryBackground)] rounded-md text-[#FF914D] text-2xl h-10 w-[80vw] cursor-pointer hover:text-[#ff9933] hover:bg-[#606060] group {selectedIconButton === 1 ? 'bg-[#00163D]' : ''}\"\r\n      on:click={() => selectButton(1)}\r\n    >\r\n      <span class=\"hidden group-hover:block absolute top-20 bg-[#00163D] text-white text-center rounded-md p-1 w-30 z-10 text-xs\">Record/Replay</span>\r\n      {#if isRecording}\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-9 h-9\" viewBox=\"0 0 24 24\"><path fill=\"#FF914D\" d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10s10-4.48 10-10S17.52 2 12 2m0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8s8 3.58 8 8s-3.58 8-8 8m4-4H8V8h8z\"/></svg>\r\n      {:else}\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-9 h-9\" viewBox=\"0 0 24 24\"><path fill=\"#FF914D\" d=\"M12 18c3.31 0 6-2.69 6-6s-2.69-6-6-6s-6 2.69-6 6s2.69 6 6 6\" opacity=\"0.3\"/><path fill=\"#FF914D\" d=\"M12 20c4.42 0 8-3.58 8-8s-3.58-8-8-8s-8 3.58-8 8s3.58 8 8 8m0-14c3.31 0 6 2.69 6 6s-2.69 6-6 6s-6-2.69-6-6s2.69-6 6-6\"/></svg>\r\n      {/if}\r\n    </button>\r\n    <button \r\n      id=\"displayPreviousTestResults\" \r\n      class=\"flex justify-center items-center bg-[var(--vscode-button-secondaryBackground)] rounded-md text-[#FF914D] text-2xl h-10 w-[80vw] cursor-pointer hover:text-[#ff9933] hover:bg-[#606060] group {selectedIconButton === 2 ? 'bg-[#00163D]' : ''}\"\r\n      on:click={() => selectButton(2)}\r\n    >\r\n      <span class=\"history-icon\"></span>\r\n      <span class=\"hidden group-hover:block absolute top-20 bg-[#00163D] text-white text-center rounded-md p-1 w-30 z-10 text-xs\">History</span>\r\n    </button>\r\n    <button \r\n      id=\"openConfig\" \r\n      class=\"flex justify-center items-center bg-[var(--vscode-button-secondaryBackground)] rounded-md text-[#FF914D] text-2xl h-10 w-[80vw] cursor-pointer hover:text-[#ff9933] hover:bg-[#606060] group {selectedIconButton === 3 ? 'bg-[#00163D]' : ''}\"\r\n      on:click={() => selectButton(3)}\r\n    >\r\n      <span class=\"settings-icon\"></span>\r\n      <span class=\"hidden group-hover:block absolute top-20 bg-[#00163D] text-white text-center rounded-md p-1 w-30 z-10 text-xs\">Settings</span>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"flex flex-col items-center justify-center mb-8 mt-7\">\r\n    <div class=\"flex items-center justify-around text-center\">\r\n      {#if selectedIconButton === 3}\r\n        <h1 class=\"text-2xl m-0\">Make changes to keploy config</h1>\r\n      {:else if selectedIconButton === 2}\r\n        <h1 class=\"text-2xl m-0\">View Previous Test Results</h1>\r\n      {:else}\r\n        <h1 class=\"text-2xl m-0\">{isRecording ? \"Recording Started\" : isTesting ? \"Testing Started\" : \"Running Keploy\"}</h1>\r\n      {/if}\r\n      <span \r\n        class=\"cursor-pointer text-red-500 text-2xl ml-4\" \r\n        on:click={stop} \r\n        on:keydown={e => e.key === 'Enter' && stop()} \r\n        id=\"stopRecordingButton\" \r\n        bind:this={stopRecordingButton} \r\n        role=\"button\" \r\n        tabindex=\"0\"\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-9 h-9\" viewBox=\"0 0 24 24\"><path fill=\"#FF914D\" d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10s10-4.48 10-10S17.52 2 12 2m0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8s8 3.58 8 8s-3.58 8-8 8m4-4H8V8h8z\"/></svg>\r\n      </span>\r\n      <span \r\n        class=\"cursor-pointer text-red-500 text-2xl ml-4\" \r\n        on:click={stop} \r\n        on:keydown={e => e.key === 'Enter' && stop()} \r\n        id=\"stopTestingButton\" \r\n        bind:this={stopTestingButton} \r\n        role=\"button\" \r\n        tabindex=\"0\"\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-9 h-9\" viewBox=\"0 0 24 24\"><path fill=\"#FF914D\" d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10s10-4.48 10-10S17.52 2 12 2m0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8s8 3.58 8 8s-3.58 8-8 8m4-4H8V8h8z\"/></svg>\r\n      </span>\r\n    </div>    \r\n    <div class=\"grid place-items-center\" id=\"statusdiv\">\r\n      <h3 id=\"recordStatus\" class=\"text-center font-bold my-5\"></h3>\r\n      <div id=\"recordedTestCases\" class=\"grid grid-cols-1 place-items-center\"></div>\r\n      <h3 id=\"testStatus\" class=\"text-center\"></h3>\r\n      <div id=\"testResults\" class=\"grid grid-cols-1 place-items-center my-5 text-left\"></div>\r\n      <button id=\"viewCompleteSummaryButton\" class=\"w-full my-2.5\">View Complete Test Summary</button>\r\n      <button id=\"viewTestLogsButton\" class=\"w-full my-2.5\">View Logs</button>  \r\n      <button id=\"viewRecordLogsButton\" class=\"w-full my-2.5\">View Logs</button>  \r\n      <hr id=\"completeSummaryHr\" class=\"hidden\" />\r\n    </div>\r\n  </div>\r\n\r\n  {#if selectedIconButton === 2}\r\n    <div id=\"lastTestResults\">\r\n      <h3 id=\"testSuiteName\"></h3>\r\n    </div>\r\n  {/if}\r\n\r\n  <div class=\"mb-8\" id=\"buttonsSection\">\r\n    <div \r\n      class=\"flex items-center justify-between p-4 mb-4 bg-[#00163D] text-[#ff9933] rounded-lg shadow-md transition-colors duration-300 cursor-pointer\"\r\n      on:click={toggleRecording} \r\n      on:keydown={e => e.key === 'Enter' && toggleRecording()} \r\n      tabindex=\"0\" \r\n      role=\"button\" \r\n      id=\"startRecordingButton\" \r\n      bind:this={startRecordingButton}\r\n    >\r\n      <div class=\"flex items-center text-2xl h-9 w-9 mr-4 text-[#ff6f61]\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-9 h-9\" viewBox=\"0 0 24 24\"><path fill=\"#FF914D\" d=\"M12 18c3.31 0 6-2.69 6-6s-2.69-6-6-6s-6 2.69-6 6s2.69 6 6 6\" opacity=\"0.3\"/><path fill=\"#FF914D\" d=\"M12 20c4.42 0 8-3.58 8-8s-3.58-8-8-8s-8 3.58-8 8s3.58 8 8 8m0-14c3.31 0 6 2.69 6 6s-2.69 6-6 6s-6-2.69-6-6s2.69-6 6-6\"/></svg>\r\n      </div>\r\n      <div class=\"flex-grow text-xl text-white\">Record Test Cases</div>\r\n      <div class=\"text-xl text-white\">➔</div>\r\n    </div>\r\n    <div \r\n      class=\"flex items-center justify-between p-4 mb-4 bg-[#00163D] text-[#ff9933] rounded-lg shadow-md transition-colors duration-300 cursor-pointer\"\r\n      on:click={toggleTesting} \r\n      on:keydown={e => e.key === 'Enter' && toggleTesting()} \r\n      tabindex=\"0\" \r\n      role=\"button\" \r\n      id=\"startTestingButton\" \r\n      bind:this={startTestingButton}\r\n    >\r\n      <div class=\"flex items-center text-2xl h-9 w-9 mr-4 text-[#ff6f61] replay-icon\"></div>\r\n      <div class=\"flex-grow text-xl text-white\">Replay Test Cases</div>\r\n      <div class=\"text-xl text-white\">➔</div>\r\n    </div>\r\n  </div>\r\n\r\n  {#if showSteps}\r\n    <div class=\"mt-4 p-4 rounded-lg shadow-md\" transition:fly={{ y: 20, duration: 300 }}>\r\n      {#if isRecording}\r\n        {#each recordingSteps as step}\r\n          <div class=\"mb-2\">{step}</div>\r\n        {/each}\r\n      {:else if isTesting}\r\n        {#each replayingSteps as step}\r\n          <div class=\"mb-2\">{step}</div>\r\n        {/each}\r\n      {/if}\r\n    </div>\r\n  {/if}\r\n  <div class=\"hidden\" id=\"loader\"></div>\r\n</div>"
  ],
  "names": [],
  "mappings": "AAkPE,2BAAY,CACN,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,qBAAqB,CAAE,GAC3B,CACA,0BAAW,CACP,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,IACb,CACA,yCAA0B,CAAG,kCAAmB,CAAG,oCAAqB,CACpE,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CAAC,IACjB,CACF,4BAAc,CACR,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,IACjB,CACA,iCAAmB,CACf,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAC1B,WAAW,CAAE,MACjB,CAMA,2BAAY,CACV,UAAU,CAAE,IACd,CA0FF,iCAAkB,CAChB,OAAO,CAAE,IACX"
}