{
  "version": 3,
  "file": "Testresults.css",
  "sources": [
    "Testresults.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount } from \"svelte\";\n\n  onMount(() => {\n    window.addEventListener(\"message\", (event) => {\n      const message = event.data;\n      console.log(\"From Test Results\",message);\n\n    const viewTestLogsButton = document.getElementById(\"viewTestLogsButton\");\n    const stopTestButton = document.getElementById(\"stopTestingButton\");\n    const testResultsDiv = document.getElementById(\"testResults\");\n    const testStatus = document.getElementById(\"testStatus\");\n    const testSuiteNameDiv = document.getElementById('testSuiteName');\nconst totalTestCasesDiv = document.getElementById('totalTestCases');\nconst testCasesPassedDiv = document.getElementById('testCasesPassed');\nconst testCasesFailedDiv = document.getElementById('testCasesFailed');\n\n      switch (message.type) {\n        case \"testResults\":\n          console.log(\"message.value\", message.value);\n          const testCaseElement = document.createElement(\"p\");\n          //click the stop testing button\n          if (stopTestButton) {\n            stopTestButton.click();\n          }\n          testCaseElement.textContent = message.textSummary;\n          if (message.textSummary.includes(\"test passed\")) {\n            testCaseElement.classList.add(\"success\");\n          } else if (message.textSummary.includes(\"test failed\")) {\n            //split the textSummary\n            const numErrors = message.textSummary.split(\":\")[1];\n            if (numErrors !== \" 0\") {\n              viewTestLogsButton.style.display = \"block\";\n            }\n            testCaseElement.classList.add(\"error\");\n          } else {\n            testCaseElement.classList.add(\"info\");\n          }\n          if (message.isCompleteSummary === true) {\n            console.log(\"message.isCompleteSummary\", message.isCompleteSummary);\n            console.log(\"message.textSummary\", message.textSummary);\n            let messageList = message.textSummary.split(\"\\t\");\n            //remove all \"\" from the list\n            messageList = messageList.filter(function (el) {\n              return el !== \"\";\n            });\n            console.log(\"messageList\", messageList);\n            const testSuiteNameElement = document.createElement(\"p\");\n            testSuiteNameElement.textContent = messageList[0];\n            testSuiteNameDiv.appendChild(testSuiteNameElement);\n            const testCasesTotalElement = document.createElement(\"p\");\n            testCasesTotalElement.textContent = messageList[1];\n            totalTestCasesDiv.appendChild(testCasesTotalElement);\n            const testCasesPassedElement = document.createElement(\"p\");\n            testCasesPassedElement.textContent = messageList[2];\n            testCasesPassedDiv.appendChild(testCasesPassedElement);\n            const testCasesFailedElement = document.createElement(\"p\");\n            testCasesFailedElement.textContent = messageList[3];\n            testCasesFailedDiv.appendChild(testCasesFailedElement);\n            return;\n          }\n\n          if (message.error === true) {\n            viewCompleteSummaryButton.style.display = \"none\";\n            viewTestLogsButton.style.display = \"block\";\n          } else {\n            viewCompleteSummaryButton.style.display = \"block\";\n            completeSummaryHr.style.display = \"block\";\n          }\n          if (message.error === true) {\n            viewTestLogsButton.style.display = \"block\";\n            if (testStatus) {\n              testStatus.style.display = \"block\";\n              testStatus.textContent = message.value;\n              testStatus.classList.add(\"error\");\n            } else {\n              testResultsDiv.innerHTML = `<p class=\"error\">${message.value}</p>`;\n            }\n          }\n          testResultsDiv.appendChild(testCaseElement);\n          break;\n      }\n    });\n  });\n\n  const handleReRun = () => {\n    console.log(\"rerunTestSuiteButton clicked\");\n    vscode.postMessage({\n      type: \"navigate\",\n      value: \"KeployHome\",\n    });\n  };\n</script>\n\n<body class=\"baloo-2-custom\">\n  <div class=\"loader\" id=\"loader\"></div>\n  <div id=\"topGrid\">\n    <div\n      class=\"keploylogo\"\n      alt=\"Keploy Logo\"\n      style=\"\n    height: 30px;\"\n    ></div>\n    <h2 class=\"info\">Test Summary</h2>\n  </div>\n  <hr />\n  <!-- 4 Column Grid -->\n  <div id=\"completeTestSummaryGrid\">\n    <div id=\"testSuiteName\" class=\"info\">\n      <p>Name</p>\n    </div>\n    <div id=\"totalTestCases\" class=\"info\">\n      <p>Total</p>\n    </div>\n    <div id=\"testCasesPassed\" class=\"success\">\n      <p>Passed</p>\n    </div>\n    <div id=\"testCasesFailed\" class=\"error\">\n      <p>Failed</p>\n    </div>\n  </div>\n  <button id=\"rerunTestSuiteButton\" on:click={handleReRun}\n    >Rerun Test Cases</button\n  >\n</body>\n\n<style>\n  .loader {\n    display: none;\n  }\n  #topGrid {\n    display: grid;\n    place-items: center;\n    grid-template-columns: 1fr 1fr;\n  }\n  #topGrid img {\n    width: 50%;\n  }\n  #completeTestSummaryGrid {\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    place-items: center;\n  }\n  #completeTestSummaryGrid div {\n    display: grid;\n    place-items: center;\n    margin: 10px;\n    grid-template-columns: 1fr;\n  }\n  button {\n    margin: 5px auto;\n    width: 90%;\n    height: 30px;\n    padding: 5px;\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "AA+HE,qCAAQ,CACN,OAAO,CAAE,IACX,CACA,sCAAS,CACP,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,qBAAqB,CAAE,GAAG,CAAC,GAC7B,CAIA,sDAAyB,CACvB,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CACtC,WAAW,CAAE,MACf,CACA,uCAAwB,CAAC,kBAAI,CAC3B,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,IAAI,CACZ,qBAAqB,CAAE,GACzB,CACA,oCAAO,CACL,MAAM,CAAE,GAAG,CAAC,IAAI,CAChB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,GACX"
}